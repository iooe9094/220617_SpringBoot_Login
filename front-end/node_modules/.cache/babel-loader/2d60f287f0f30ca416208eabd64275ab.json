{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  // html에서 변수처럼 호출 : 뒤에 () 붙이면 안됨 예) currentUser\n  // 속도는 computed 빠름\n  computed: {\n    currentUser: function currentUser() {\n      // 공유저장소의 전역변수(공유변수 : user )\n      // 자동으로 로그인되었으면 loggedIn = true, user객체 있음\n      // 아니면 loggedIn = false, user객체 = null\n      // return this.$store.state.auth.user;\n      return true; // 테스트용\n    }\n  },\n  // html에서 함수처럼 호출 : 뒤에 () 붙음 예) logOut(), logOut\n  methods: {\n    logOut: function logOut() {\n      // dispatch 호출하는 메소드 : actions 있는 메소드를 호출함\n      this.$store.dispatch(\"auth/logout\"); //   로그아웃 후 이동할 페이지 지정 : login 페이지\n\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;EACA;EACA;EACAA;IACAC,WADA,yBACA;MACA;MACA;MACA;MACA;MACA,YALA,CAKA;IACA;EAPA,CAHA;EAYA;EACAC;IACAC,MADA,oBACA;MACA;MACA,oCAFA,CAGA;;MACA;IACA;EANA;AAbA","names":["computed","currentUser","methods","logOut"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n      <router-link to=\"/\" class=\"navbar-brand\">bezKoder</router-link>\n      <div class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <router-link to=\"/tutorials\" class=\"nav-link\">Tutorials</router-link>\n        </li>\n        <li class=\"nav-item\">\n          <router-link to=\"/add\" class=\"nav-link\">Add</router-link>\n        </li>\n      </div>\n\n      <!-- 로그인 태그 추가-->\n      <div v-if=\"currentUser\" class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <router-link to=\"/register\" class=\"nav-link\">\n            <!-- 웹 아이콘 추가 : user-plus -->\n            <font-awesome-icon icon=\"user-plus\"></font-awesome-icon>\n            Sign Up\n          </router-link>\n        </li>\n        <li class=\"nav-item\">\n          <router-link to=\"/login\" class=\"nav-link\">\n            <!-- 웹 아이콘 추가 : sign-in-alt -->\n            <font-awesome-icon icon=\"sign-in-alt\"></font-awesome-icon>\n            Login\n          </router-link>\n        </li>\n      </div>\n\n      <!-- 로그아웃 태그 추가-->\n      <div v-if=\"currentUser\" class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <router-link to=\"/profile\" class=\"nav-link\">\n            <!-- 웹 아이콘 추가 : user -->\n            <font-awesome-icon icon=\"user\"></font-awesome-icon>\n            {{ currentUser.username }}\n          </router-link>\n        </li>\n        <li class=\"nav-item\">\n          <a href @click.prevent=\"logOut\" class=\"nav-link\">\n            <!-- 웹 아이콘 추가 : LogOut -->\n            <font-awesome-icon icon=\"sign-out-alt\"></font-awesome-icon>\n            LogOut\n          </a>\n        </li>\n      </div>\n    </nav>\n\n    <div class=\"container mt-3\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  // html에서 변수처럼 호출 : 뒤에 () 붙이면 안됨 예) currentUser\n  // 속도는 computed 빠름\n  computed: {\n    currentUser() {\n      // 공유저장소의 전역변수(공유변수 : user )\n      // 자동으로 로그인되었으면 loggedIn = true, user객체 있음\n      // 아니면 loggedIn = false, user객체 = null\n      // return this.$store.state.auth.user;\n      return true; // 테스트용\n    },\n  },\n  // html에서 함수처럼 호출 : 뒤에 () 붙음 예) logOut(), logOut\n  methods: {\n    logOut() {\n      // dispatch 호출하는 메소드 : actions 있는 메소드를 호출함\n      this.$store.dispatch(\"auth/logout\");\n      //   로그아웃 후 이동할 페이지 지정 : login 페이지\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}